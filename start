#!/bin/bash

# Main script launcher for Trading Signals Project
# Usage: ./start [command] [options]

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

show_help() {
    echo "🚀 Trading Signals Project - Script Launcher"
    echo "============================================="
    echo ""
    echo "Usage: ./start [command] [options]"
    echo ""
    echo "📋 Available Commands:"
    echo ""
    echo "  🚀 START COMMANDS:"
    echo "    all                 Start both backend and frontend"
    echo "    backend             Start backend services only"
    echo "    frontend            Start frontend development server"
    echo ""
    echo "  📦 INSTALL COMMANDS:"
    echo "    install-backend     Install backend dependencies"
    echo "    install-frontend    Install frontend dependencies"
    echo "    install-all         Install all dependencies"
    echo ""
    echo "  🧪 TEST COMMANDS:"
    echo "    test                Test entire project structure"
    echo "    test-backend        Test backend structure"
    echo "    test-frontend       Test frontend structure"
    echo ""
    echo "  🔧 UTILITY COMMANDS:"
    echo "    build               Build frontend for production"
    echo "    cleanup             Clean up project files"
    echo "    health              Check system health"
    echo "    stop                Stop all services"
    echo "    drop-data           Drop database data"
    echo ""
    echo "  📚 HELP:"
    echo "    help                Show this help message"
    echo ""
    echo "Examples:"
    echo "  ./start all           # Start everything"
    echo "  ./start install-all   # Install all dependencies"
    echo "  ./start test          # Test project structure"
    echo "  ./start cleanup       # Clean up project"
}

case "$1" in
    # Start commands
    "all")
        echo "🚀 Starting all services..."
        exec "$SCRIPT_DIR/scripts/start/start-all.sh" "${@:2}"
        ;;
    "backend")
        echo "🐍 Starting backend services..."
        exec "$SCRIPT_DIR/scripts/start/start-backend.sh" "${@:2}"
        ;;
    "frontend")
        echo "🎨 Starting frontend development server..."
        exec "$SCRIPT_DIR/scripts/start/start-frontend.sh" "${@:2}"
        ;;
    
    # Install commands
    "install-backend")
        echo "📦 Installing backend dependencies..."
        exec "$SCRIPT_DIR/scripts/install/install-backend.sh" "${@:2}"
        ;;
    "install-frontend")
        echo "📦 Installing frontend dependencies..."
        exec "$SCRIPT_DIR/scripts/install/install-frontend.sh" "${@:2}"
        ;;
    "install-all")
        echo "📦 Installing all dependencies..."
        "$SCRIPT_DIR/scripts/install/install-backend.sh"
        "$SCRIPT_DIR/scripts/install/install-frontend.sh"
        echo "✅ All dependencies installed!"
        ;;
    
    # Test commands
    "test")
        echo "🧪 Testing project structure..."
        exec "$SCRIPT_DIR/scripts/test/test-all.sh" "${@:2}"
        ;;
    "test-backend")
        echo "🧪 Testing backend structure..."
        exec "$SCRIPT_DIR/scripts/test/test-backend.sh" "${@:2}"
        ;;
    "test-frontend")
        echo "🧪 Testing frontend structure..."
        exec "$SCRIPT_DIR/scripts/test/test-frontend.sh" "${@:2}"
        ;;
    
    # Utility commands
    "build")
        echo "🏗️ Building frontend for production..."
        exec "$SCRIPT_DIR/scripts/utils/build-frontend.sh" "${@:2}"
        ;;
    "cleanup")
        echo "🧹 Cleaning up project..."
        exec "$SCRIPT_DIR/scripts/utils/cleanup.sh" "${@:2}"
        ;;
    "health")
        echo "🏥 Checking system health..."
        exec "$SCRIPT_DIR/scripts/utils/health.sh" "${@:2}"
        ;;
    "stop")
        echo "🛑 Stopping all services..."
        exec "$SCRIPT_DIR/scripts/utils/stop.sh" "${@:2}"
        ;;
    "drop-data")
        echo "🗑️ Dropping database data..."
        exec "$SCRIPT_DIR/scripts/utils/drop_data.sh" "${@:2}"
        ;;
    
    # Help
    "help"|"-h"|"--help"|"")
        show_help
        ;;
    
    # Unknown command
    *)
        echo "❌ Unknown command: $1"
        echo ""
        show_help
        exit 1
        ;;
esac
